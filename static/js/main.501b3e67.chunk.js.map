{"version":3,"sources":["components/themeToggle.jsx","actions/index.js","components/form.jsx","components/weatherCard.jsx","App.jsx","reducer/placedatareducer.js","reducer/placereducer.js","reducer/themeReducer.js","reducer/index.js","store.js","index.js"],"names":["ThemeToggle","theme","useSelector","state","dispatch","useDispatch","className","onClick","type","Form","place","value","onChange","e","payload","updatePlace","target","fetch","then","res","json","data","updatePlaceData","WeatherCard","placeData","location","src","current","condition","icon","alt","temp_c","text","name","wind_kph","humidity","precip_in","App","placedatareducer","action","placereducer","themeReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.501b3e67.chunk.js","sourcesContent":["import {useDispatch , useSelector} from \"react-redux\";\r\nimport { toggleTheme } from \"../actions\";\r\nconst ThemeToggle = () => {\r\n    const theme = useSelector((state) => state.theme);\r\n    const dispatch = useDispatch();\r\n    return( <div className= \"toggle-theme\">\r\n        <button className= {theme?\"btn btn-light\":\"btn btn-dark\"} onClick = {() => {\r\n            dispatch(toggleTheme())\r\n        }}>\r\n{theme?\"Dark\":\"Light\"}\r\n        </button>\r\n    </div>\r\n);};\r\n\r\nexport default ThemeToggle;","const updatePlace = (place) => {\r\n    return {\r\n        type: \"UPDATE_PLACE\",\r\n        payload:place,\r\n    };\r\n};\r\n\r\n\r\nconst updatePlaceData = (place) => {\r\n    return (dispatch) => {\r\n        fetch(\r\n`https://api.weatherapi.com/v1/current.json?key=f6303adcb6e9472eadd42911210609&q=${place}`\r\n        )\r\n        .then((res) =>res.json())\r\n        .then((data) => {\r\n\r\n           dispatch({\r\n               type:\"UPDATE_PLACE_DATA\",\r\n               payload:data,\r\n                       });\r\n        });\r\n      \r\n    };\r\n};\r\n\r\n\r\nconst toggleTheme = () => {\r\n    return{\r\n        type:\"TOGGLE_THEME\",\r\n    \r\n    }\r\n}\r\nexport {updatePlace , updatePlaceData , toggleTheme};","import {useDispatch ,  useSelector} from \"react-redux\";\r\nimport { updatePlace , updatePlaceData } from \"../actions\";\r\nconst Form = () => {\r\n    const place = useSelector((state) =>state.place);\r\n    const theme = useSelector((state) =>state.theme);\r\n    const dispatch = useDispatch();\r\nreturn(\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n        <div className = \"col-12 form\">\r\n    <input\r\n     type=\"text\"\r\n     value={place} \r\n    onChange = {(e) => {\r\n        dispatch(updatePlace(e.target.value));\r\n    }} \r\n    />\r\n    <button \r\n    className = {theme?\"btn btn-light\":\"btn btn-dark\"}\r\n    onClick = {() => {\r\n        dispatch(updatePlaceData(place));\r\n    }}>\r\n    Submit\r\n    </button>\r\n    </div>\r\n    </div >\r\n    </div>\r\n);\r\n};\r\nexport default Form;","import {useSelector} from \"react-redux\";\r\nconst WeatherCard = () => {\r\n    const placeData = useSelector(state =>state.placeData);\r\n    const theme = useSelector((state) => state.theme);\r\n    return (\r\n     <div className=\"container\">\r\n         <div className=\"row\">\r\n             \r\n    <div className = \"offset-md-4 col-12 col-md-4 weather\">\r\n      <div className = {theme?\"card dark\":\"card\"}>\r\n        {placeData.location?(\r\n          <div>\r\n            <img src={placeData.current.condition.icon} alt=\"\" />\r\n            <div className = \"temp\">{placeData.current.temp_c}Â°</div>\r\n            <div className = \"desc\">{placeData.current.condition.text}</div>\r\n            <div className = \"place\">{placeData.location.name}</div>\r\n         \r\n          <div className=\"container\">\r\n            <div className=\"row whp\">\r\n            <div className=\"col-3\">\r\n              <div className=\"title\">Wind Speed</div>\r\n              <div className=\"data\">\r\n{placeData.current.wind_kph}<span className = \"unit\">KM</span>\r\n              </div>\r\n              </div>\r\n\r\n              <div className=\"col\">\r\n              <div className=\"title\">Humidity</div>\r\n              <div className=\"data\">\r\n              {placeData.current.humidity}<span className = \"unit\">%</span>\r\n              </div>\r\n              </div>\r\n              <div className=\"col-3\">\r\n              <div className=\"title\">Precipitation</div>\r\n              <div className=\"data\">\r\n              {placeData.current.precip_in}<span className = \"unit\">%</span>\r\n            </div>\r\n          </div>\r\n          </div>\r\n          </div>\r\n            </div>\r\n        ):(\r\n          <h2>Place Not Found </h2>\r\n        )\r\n       }\r\n      </div>\r\n    </div>\r\n    </div>\r\n    \r\n         </div>\r\n        \r\n    );\r\n};\r\nexport default WeatherCard;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport ThemeToggle from './components/themeToggle';\nimport Form from './components/form';\nimport WeatherCard from './components/weatherCard';\nimport {useSelector} from \"react-redux\";\nfunction App(){\n  const theme = useSelector((state) =>state.theme);\n  return( \n    <div className={theme?\"App Dark\":\"App \" }>\n      <ThemeToggle/>\n      <Form/>\n      <WeatherCard/>\n   </div>\n   \n  );\n}\n\nexport default App;\n","const placedatareducer = (state = {} , action) => {\r\n    if(action.type === \"UPDATE_PLACE_DATA\")\r\n{return action.payload;}\r\nreturn state;\r\n}\r\nexport default placedatareducer;","const placereducer = (state=\"\", action) => {\r\n    if(action.type===\"UPDATE_PLACE\"){ \r\n       return action.payload ;\r\n       }\r\n     return state;\r\n\r\n};\r\nexport default placereducer;","const themeReducer = (state=false , action) => {\r\nif(action.type===\"TOGGLE_THEME\")\r\n    return !state;\r\n    return state;\r\n}\r\nexport default themeReducer;","import placedatareducer from \"./placedatareducer\";\r\nimport placereducer from \"./placereducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport themeReducer from \"./themeReducer\";\r\nconst rootReducer = combineReducers({\r\n   placeData: placedatareducer,\r\n   place: placereducer,\r\n   theme  : themeReducer,\r\n});\r\nexport default rootReducer;\r\n","import {createStore , applyMiddleware} from \"redux\";\r\nimport thunk from'redux-thunk';\r\nimport rootReducer from \"./reducer\";\r\nconst store = createStore(rootReducer , applyMiddleware(thunk));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport store from \"./store\";\nimport {Provider} from \"react-redux\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = { store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}